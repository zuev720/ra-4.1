{"version":3,"sources":["components/Converter/Form/Form.jsx","components/Converter/Converter.jsx","components/Functions/validateHex.js","components/Functions/convertHexToRgb.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","className","onSubmit","type","name","onKeyUp","rgb","Converter","useState","setRgb","activeColor","setActiveColor","style","backgroundColor","e","preventDefault","inputValue","target","value","trim","length","test","color","replace","parseInt","slice","convertHexToRgb","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAGO,SAASA,EAAKC,GACjB,OACI,uBAAMC,UAAW,OAAQC,SAAUF,EAAME,SAAzC,UACI,uBAAOD,UAAW,QAASE,KAAK,OAAOC,KAAM,MAAOC,QAASL,EAAMK,UACnE,qBAAKJ,UAAW,YAAhB,SAA8BD,EAAMM,SCDzC,SAASC,IACZ,MAAsBC,mBAAS,UAA/B,mBAAOF,EAAP,KAAYG,EAAZ,KAEA,EAAsCD,mBAAS,WAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KAqBA,OACI,qBAAKV,UAAW,YAAaW,MAAO,CAACC,gBAAiBH,GAAtD,SACI,cAAC,EAAD,CACIR,SAPK,SAACY,GACdA,EAAEC,kBAOMV,QAvBI,SAACS,GACb,IAAME,EAAaF,EAAEG,OAAOC,MAAMC,OAClC,GAAsB,MAAlBH,EAAW,IAAoC,IAAtBA,EAAWI,OACpC,GCbS,uBACAC,KDYOL,GAAa,CACzB,IAAMV,EEff,SAA0BY,GAC7B,IAAMI,EAAQJ,EAAMK,QAAQ,IAAK,IACjC,MAAM,OAAN,OAAcC,SAASF,EAAMG,MAAM,EAAG,GAAI,IAA1C,aAAkDD,SAASF,EAAMG,MAAM,EAAG,GAAI,IAA9E,aAAsFD,SAASF,EAAMG,MAAM,EAAG,GAAI,IAAlH,KFawBC,CAAgBV,GAC5BP,EAAOH,GACPK,EAAeL,GACfQ,EAAEG,OAAOC,MAAQ,QAEjBT,EAAO,wCACPE,EAAe,YAcfL,IAAKA,MGxBNqB,MARf,WACE,OACE,qBAAK1B,UAAU,MAAf,SACE,cAAC,EAAD,OCMS2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b5a34c14.chunk.js","sourcesContent":["import React from 'react';\nimport './Form.css';\n\nexport function Form(props) {\n    return (\n        <form className={'Form'} onSubmit={props.onSubmit}>\n            <input className={'input'} type=\"text\" name={'hex'} onKeyUp={props.onKeyUp}/>\n            <div className={'rgb-block'}>{props.rgb}</div>\n        </form>\n    )\n}\n","import React, {useState} from 'react';\nimport './Converter.css'\nimport {Form} from './Form/Form';\nimport {validateHex} from '../Functions/validateHex';\nimport {convertHexToRgb} from '../Functions/convertHexToRgb';\n\nexport function Converter() {\n    const [rgb, setRgb] = useState('rgb ()');\n\n    const [activeColor, setActiveColor] = useState('#33495f');\n\n    const onkeyup = (e) => {\n        const inputValue = e.target.value.trim();\n        if (inputValue[0] === '#' && inputValue.length === 7) {\n            if (validateHex(inputValue)) {\n                const rgb = convertHexToRgb(inputValue);\n                setRgb(rgb);\n                setActiveColor(rgb);\n                e.target.value = '';\n            } else {\n                setRgb('ошибка');\n                setActiveColor('#FF5733');\n            }\n        }\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n    }\n\n    return (\n        <div className={'Converter'} style={{backgroundColor: activeColor}}>\n            <Form\n                onSubmit={onSubmit}\n                onKeyUp={onkeyup}\n                rgb={rgb}\n            />\n        </div>\n    )\n}\n","export function validateHex (value) {\n    const hexRegex = /^#([A-Fa-f0-9]{6})$/i;\n    return (hexRegex.test(value));\n}\n","export function convertHexToRgb (value) {\n    const color = value.replace('#', '');\n    return `rgb(${parseInt(color.slice(0, 2), 16)}, ${parseInt(color.slice(2, 4), 16)}, ${parseInt(color.slice(4, 6), 16)})`;\n}\n","import './App.css';\nimport {Converter} from './components/Converter/Converter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Converter />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}